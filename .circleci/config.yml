version: 2.1

workflows:
  version: 2
  test:
    jobs:
      - build-netstandard-2
      - test-netcore:
          name: .NET Standard 2.0 + .NET Core 2.1
          docker-image: mcr.microsoft.com/dotnet/core/sdk:2.1-focal
          build-target-framework: netstandard2.0
          test-target-framework: netcoreapp2.1
          requires:
            - build-netstandard-2
      - test-netcore:
          name: .NET Standard 2.0 + .NET Core 3.1
          docker-image: mcr.microsoft.com/dotnet/core/sdk:3.1-focal
          build-target-framework: netstandard2.0
          test-target-framework: netcoreapp3.1
          requires:
            - build-netstandard-2
      - test-netcore:
          name: .NET Standard 2.0 + .NET 5.0
          docker-image: mcr.microsoft.com/dotnet/sdk:5.0-focal
          build-target-framework: netstandard2.0
          test-target-framework: net5.0
          requires:
            - build-netstandard-2
      - test-netcore:
          name: .NET Standard 2.0 + .NET 6.0
          docker-image: mcr.microsoft.com/dotnet/sdk:6.0-focal
          build-target-framework: netstandard2.0
          test-target-framework: net6.0
          requires:
            - build-netstandard-2

orbs:
  win: circleci/windows@1.0.0

jobs:
  build-netstandard-2:
    parameters:
      build-target-framework:
        type: string
        default: netstandard2.0
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:2.1-focal
    environment:
      ASPNETCORE_SUPPRESSSTATUSMESSAGES: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - dotnet-packages-v1-{{ checksum "app/QuestionService/QuestionService.csproj" }}
      - run:
          name: "Install project dependencies"
          command: dotnet restore app/QuestionService/QuestionService.csproj
      - save_cache:
          key: dotnet-packages-v1-{{ checksum "app/QuestionService/QuestionService.csproj" }}
          paths:
            - /root/.nuget/packages
      - run:
         name: "Build Application according to some given configuration"
         command: dotnet build  app/QuestionService/QuestionService.csproj --configuration Release
      - persist_to_workspace:
          root: app/QuestionService
          paths:
            - bin
            - obj

  test-netcore:
    parameters:
      docker-image:
        type: string
      build-target-framework:
        type: string
      test-target-framework:
        type: string
    docker:
      - image: <<parameters.docker-image>>
    environment:
      ASPNETCORE_SUPPRESSSTATUSMESSAGES: true
      TESTFRAMEWORK: <<parameters.test-target-framework>>
    steps:
      - checkout
      - attach_workspace:
          at: app/QuestionService
      - restore_cache:
          keys: # see comments under build-netstandard-2
            - dotnet-packages-v1-{{ checksum "app/test/Tests.csproj" }}
      - run:
          name: "Install project dependencies"
          command: dotnet restore app/test/Tests.csproj
      - save_cache:
          key: dotnet-packages-v1-{{ checksum "app/test/Tests.csproj" }}
          paths:
            - /root/.nuget/packages
      - run:
          name: "Run Application Tests"
          command: dotnet test app/test/Tests.csproj --filter Test=Unit -f <<parameters.test-target-framework>>
